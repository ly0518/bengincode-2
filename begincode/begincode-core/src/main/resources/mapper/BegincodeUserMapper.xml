<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.core.mapper.BegincodeUserMapper" >
  <resultMap id="BaseResultMap" type="org.core.model.BegincodeUser" >
    <id column="begincode_user_id" property="begincodeUserId" jdbcType="INTEGER" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="cdate" property="cdate" jdbcType="TIMESTAMP" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="tel_phone" property="telPhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="receive_email" property="receiveEmail" jdbcType="CHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="check_flag" property="checkFlag" jdbcType="CHAR" />
    <result column="gag" property="gag" jdbcType="CHAR" />
    <result column="frozen" property="frozen" jdbcType="CHAR" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="access_token" property="accessToken" jdbcType="VARCHAR" />
    <result column="user_source_id" property="userSourceId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    begincode_user_id, login_name, pwd, nickname, cdate, sex, tel_phone, email, receive_email, 
    pic, check_flag, gag, frozen, course, open_id, access_token, user_source_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from begincode_user
    where begincode_user_id = #{begincodeUserId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from begincode_user
    where begincode_user_id = #{begincodeUserId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.core.model.BegincodeUser" >
    insert into begincode_user (begincode_user_id, login_name, pwd, 
      nickname, cdate, sex, 
      tel_phone, email, receive_email, 
      pic, check_flag, gag, frozen, 
      course, open_id, access_token, 
      user_source_id)
    values (#{begincodeUserId,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{cdate,jdbcType=TIMESTAMP}, #{sex,jdbcType=CHAR}, 
      #{telPhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{receiveEmail,jdbcType=CHAR}, 
      #{pic,jdbcType=VARCHAR}, #{checkFlag,jdbcType=CHAR}, #{gag,jdbcType=CHAR}, #{frozen,jdbcType=CHAR}, 
      #{course,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR}, #{accessToken,jdbcType=VARCHAR}, 
      #{userSourceId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.core.model.BegincodeUser" >
    insert into begincode_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="begincodeUserId != null" >
        begincode_user_id,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="cdate != null" >
        cdate,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="telPhone != null" >
        tel_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="receiveEmail != null" >
        receive_email,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="checkFlag != null" >
        check_flag,
      </if>
      <if test="gag != null" >
        gag,
      </if>
      <if test="frozen != null" >
        frozen,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="accessToken != null" >
        access_token,
      </if>
      <if test="userSourceId != null" >
        user_source_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="begincodeUserId != null" >
        #{begincodeUserId,jdbcType=INTEGER},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null" >
        #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="telPhone != null" >
        #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="receiveEmail != null" >
        #{receiveEmail,jdbcType=CHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="checkFlag != null" >
        #{checkFlag,jdbcType=CHAR},
      </if>
      <if test="gag != null" >
        #{gag,jdbcType=CHAR},
      </if>
      <if test="frozen != null" >
        #{frozen,jdbcType=CHAR},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null" >
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="userSourceId != null" >
        #{userSourceId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.core.model.BegincodeUser" >
    update begincode_user
    <set >
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="cdate != null" >
        cdate = #{cdate,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="telPhone != null" >
        tel_phone = #{telPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="receiveEmail != null" >
        receive_email = #{receiveEmail,jdbcType=CHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="checkFlag != null" >
        check_flag = #{checkFlag,jdbcType=CHAR},
      </if>
      <if test="gag != null" >
        gag = #{gag,jdbcType=CHAR},
      </if>
      <if test="frozen != null" >
        frozen = #{frozen,jdbcType=CHAR},
      </if>
      <if test="course != null" >
        course = #{course,jdbcType=VARCHAR},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="accessToken != null" >
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="userSourceId != null" >
        user_source_id = #{userSourceId,jdbcType=INTEGER},
      </if>
    </set>
    where begincode_user_id = #{begincodeUserId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.core.model.BegincodeUser" >
    update begincode_user
    set login_name = #{loginName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      cdate = #{cdate,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=CHAR},
      tel_phone = #{telPhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      receive_email = #{receiveEmail,jdbcType=CHAR},
      pic = #{pic,jdbcType=VARCHAR},
      check_flag = #{checkFlag,jdbcType=CHAR},
      gag = #{gag,jdbcType=CHAR},
      frozen = #{frozen,jdbcType=CHAR},
      course = #{course,jdbcType=VARCHAR},
      open_id = #{openId,jdbcType=VARCHAR},
      access_token = #{accessToken,jdbcType=VARCHAR},
      user_source_id = #{userSourceId,jdbcType=INTEGER}
    where begincode_user_id = #{begincodeUserId,jdbcType=INTEGER}
  </update>
</mapper>